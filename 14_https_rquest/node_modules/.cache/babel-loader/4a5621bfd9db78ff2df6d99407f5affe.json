{"ast":null,"code":"var _jsxFileName = \"E:\\\\laragon\\\\www\\\\udemy_react_journey\\\\14_https_rquest\\\\src\\\\App.js\";\nimport React, { useState, useEffect, useCallback, useContext } from \"react\";\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n// import axios from \"axios\";\nimport moment from \"moment\";\nimport AddMovie from \"./components/AddMovie.js\";\nimport TokenGenerate from \"./components/TokenGenerate.js\";\nimport AddContextProvider from \"./store/AddContextProvider.js\";\nimport AllContext from \"./store/all-context.js\";\nfunction App() {\n  const allCtx = useContext(AllContext);\n  const [moviesApi, setMoviesApi] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [accessToken, setAccessToken] = useState(\"\");\n  const setAccessTokenHandler = access_token => {\n    setAccessToken(access_token);\n    console.log(\"access_token hander\", access_token);\n  };\n\n  // const fetchMovieHandler = useCallback(async () => {\n  //   setIsLoading(true);\n  //   setError(\"\");\n  //   //errors\n\n  //   try {\n  //     const response = await fetch(\"http://127.0.0.1:8000/api/get-all-post\");\n  //     // console.log(response);\n  //     if (response.status !== 200) {\n  //       throw new Error(\"Something is wrong\");\n  //     }\n  //     const data = await response.json();\n\n  //     data.data.forEach((d) => {\n  //       d.releaseDate = moment(d.created_at).format(\"MMM Do YY\");\n  //       d.openingText = d.description;\n  //       // console.log(d);\n  //     });\n  //     console.log(\"fetch all moviews\", data.data);\n  //     allCtx.addAllMovies([...data.data]);\n  //     setMoviesApi([...data.data]);\n  //     setIsLoading(false);\n  //     // console.log(data);\n  //   } catch (error) {\n  //     setError(error.message);\n  //     // Code to handle the error\n  //     console.log(\"An error occurred:\", error.message);\n  //   } finally {\n  //     // Optional finally block\n  //     // Code here will always execute regardless of whether an error occurred or not\n  //   }\n\n  //   //aync await\n  //   // const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n  //   // const data = await response.json();\n  //   // data.forEach((d) => {\n  //   //   d.releaseDate = moment().format(\"MMM Do YY\");\n  //   //   d.openingText = d.body;\n  //   // });\n  //   // setMoviesApi([...data]);\n  //   // setIsLoading(false);\n  //   // console.log(data);\n  //   //fetch:-\n  //   // fetch(\"https://jsonplaceholder.typicode.com/posts\")\n  //   //   .then((response) => {\n  //   //     return response.json();\n  //   //   })\n  //   //   .then((data) => {\n  //   // data.forEach((d) => {\n  //   //   d.releaseDate = moment().format(\"MMM Do YY\");\n  //   //   d.openingText = d.body;\n  //   // });\n  //   // setMoviesApi([...data]);\n  //   // console.log(data);\n  //   //   });\n  //   //axios:-\n  //   // axios\n  //   //   .get(\"https://jsonplaceholder.typicode.com/posts\")\n  //   //   .then((response) => {\n  //   //     // handle success\n  //   //     //current date set in array object\n  //   // response.data.forEach((d) => {\n  //   //   d.releaseDate = moment().format(\"MMM Do YY\");\n  //   //   d.openingText = d.body;\n  //   // });\n  //   //     setMoviesApi([...response.data]);\n  //   //     console.log(response);\n  //   //   })\n  //   //   .catch((error) => {\n  //   //     // handle error\n  //   //     console.log(error);\n  //   //   })\n  //   //   .finally(() => {\n  //   //     // always executed\n  //   //   });\n  // }, []);\n\n  // useEffect(() => {\n  //   console.log(\"user effert\");\n  //   fetchMovieHandler();\n  // }, [fetchMovieHandler]);\n\n  return /*#__PURE__*/React.createElement(AddContextProvider, {\n    accessTokenSet: setAccessTokenHandler,\n    moviesApi: moviesApi,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }\n  }, !accessToken && /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TokenGenerate, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 11\n    }\n  })), accessToken && /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddMovie, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchMovieHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, \"Fetch Movies\")), /*#__PURE__*/React.createElement(\"section\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, !isLoading && /*#__PURE__*/React.createElement(MoviesList, {\n    movies: moviesApi,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 24\n    }\n  }), isLoading && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 23\n    }\n  }, \"Loading...\"), error && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, error)));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useCallback","useContext","MoviesList","moment","AddMovie","TokenGenerate","AddContextProvider","AllContext","App","allCtx","moviesApi","setMoviesApi","isLoading","setIsLoading","error","setError","accessToken","setAccessToken","setAccessTokenHandler","access_token","console","log","createElement","accessTokenSet","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","fetchMovieHandler","movies"],"sources":["E:/laragon/www/udemy_react_journey/14_https_rquest/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback, useContext } from \"react\";\n\nimport MoviesList from \"./components/MoviesList\";\nimport \"./App.css\";\n// import axios from \"axios\";\nimport moment from \"moment\";\nimport AddMovie from \"./components/AddMovie.js\";\nimport TokenGenerate from \"./components/TokenGenerate.js\";\nimport AddContextProvider from \"./store/AddContextProvider.js\";\nimport AllContext from \"./store/all-context.js\";\n\nfunction App() {\n  const allCtx = useContext(AllContext);\n  const [moviesApi, setMoviesApi] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  const [accessToken, setAccessToken] = useState(\"\");\n\n  const setAccessTokenHandler = (access_token) => {\n    setAccessToken(access_token);\n    console.log(\"access_token hander\", access_token);\n  };\n\n  // const fetchMovieHandler = useCallback(async () => {\n  //   setIsLoading(true);\n  //   setError(\"\");\n  //   //errors\n\n  //   try {\n  //     const response = await fetch(\"http://127.0.0.1:8000/api/get-all-post\");\n  //     // console.log(response);\n  //     if (response.status !== 200) {\n  //       throw new Error(\"Something is wrong\");\n  //     }\n  //     const data = await response.json();\n\n  //     data.data.forEach((d) => {\n  //       d.releaseDate = moment(d.created_at).format(\"MMM Do YY\");\n  //       d.openingText = d.description;\n  //       // console.log(d);\n  //     });\n  //     console.log(\"fetch all moviews\", data.data);\n  //     allCtx.addAllMovies([...data.data]);\n  //     setMoviesApi([...data.data]);\n  //     setIsLoading(false);\n  //     // console.log(data);\n  //   } catch (error) {\n  //     setError(error.message);\n  //     // Code to handle the error\n  //     console.log(\"An error occurred:\", error.message);\n  //   } finally {\n  //     // Optional finally block\n  //     // Code here will always execute regardless of whether an error occurred or not\n  //   }\n\n  //   //aync await\n  //   // const response = await fetch(\"https://jsonplaceholder.typicode.com/posts\");\n  //   // const data = await response.json();\n  //   // data.forEach((d) => {\n  //   //   d.releaseDate = moment().format(\"MMM Do YY\");\n  //   //   d.openingText = d.body;\n  //   // });\n  //   // setMoviesApi([...data]);\n  //   // setIsLoading(false);\n  //   // console.log(data);\n  //   //fetch:-\n  //   // fetch(\"https://jsonplaceholder.typicode.com/posts\")\n  //   //   .then((response) => {\n  //   //     return response.json();\n  //   //   })\n  //   //   .then((data) => {\n  //   // data.forEach((d) => {\n  //   //   d.releaseDate = moment().format(\"MMM Do YY\");\n  //   //   d.openingText = d.body;\n  //   // });\n  //   // setMoviesApi([...data]);\n  //   // console.log(data);\n  //   //   });\n  //   //axios:-\n  //   // axios\n  //   //   .get(\"https://jsonplaceholder.typicode.com/posts\")\n  //   //   .then((response) => {\n  //   //     // handle success\n  //   //     //current date set in array object\n  //   // response.data.forEach((d) => {\n  //   //   d.releaseDate = moment().format(\"MMM Do YY\");\n  //   //   d.openingText = d.body;\n  //   // });\n  //   //     setMoviesApi([...response.data]);\n  //   //     console.log(response);\n  //   //   })\n  //   //   .catch((error) => {\n  //   //     // handle error\n  //   //     console.log(error);\n  //   //   })\n  //   //   .finally(() => {\n  //   //     // always executed\n  //   //   });\n  // }, []);\n\n  // useEffect(() => {\n  //   console.log(\"user effert\");\n  //   fetchMovieHandler();\n  // }, [fetchMovieHandler]);\n\n  return (\n    <AddContextProvider\n      accessTokenSet={setAccessTokenHandler}\n      moviesApi={moviesApi}\n    >\n      {!accessToken && (\n        <section>\n          <TokenGenerate />\n        </section>\n      )}\n\n      {accessToken && (\n        <section>\n          <AddMovie />\n        </section>\n      )}\n\n      <section>\n        <button onClick={fetchMovieHandler}>Fetch Movies</button>\n      </section>\n      <section>\n        {!isLoading && <MoviesList movies={moviesApi} />}\n        {isLoading && <p>Loading...</p>}\n        {error && <p>{error}</p>}\n      </section>\n    </AddContextProvider>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}