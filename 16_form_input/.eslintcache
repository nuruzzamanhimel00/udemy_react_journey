[{"E:\\laragon\\www\\udemy_react_journey\\16_form_input\\src\\index.js":"1","E:\\laragon\\www\\udemy_react_journey\\16_form_input\\src\\App.js":"2","E:\\laragon\\www\\udemy_react_journey\\16_form_input\\src\\components\\SimpleInput.js":"3","E:\\laragon\\www\\udemy_react_journey\\16_form_input\\src\\hook\\user-input.js":"4","E:\\laragon\\www\\udemy_react_journey\\16_form_input\\src\\components\\BasicForm.js":"5","E:\\laragon\\www\\udemy_react_journey\\16_form_input\\src\\hook\\form-input.js":"6"},{"size":142,"mtime":1616595887000,"results":"7","hashOfConfig":"8"},{"size":249,"mtime":1711789219661,"results":"9","hashOfConfig":"8"},{"size":2456,"mtime":1711733088671,"results":"10","hashOfConfig":"8"},{"size":1267,"mtime":1711732351742,"results":"11","hashOfConfig":"8"},{"size":3822,"mtime":1711898991810,"results":"12","hashOfConfig":"8"},{"size":1844,"mtime":1711898670473,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"17y876d",{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\laragon\\www\\udemy_react_journey\\16_form_input\\src\\index.js",[],["29","30"],"E:\\laragon\\www\\udemy_react_journey\\16_form_input\\src\\App.js",[],"E:\\laragon\\www\\udemy_react_journey\\16_form_input\\src\\components\\SimpleInput.js",["31","32"],"import React from 'react'\nimport useInput from   '../hook/user-input';\nconst SimpleInput = (props) => {\n\n  const { value: enteredName,  setIsTuch,  enterNameIsValied, enterNameInputHandler, enterNameBlurHandlr, formIsValide, reset: resetValue } = useInput(value => value.trim() === '');\n\n  const { value: enteredEmail,  setIsTuch:setIsEmailTuch,  enterNameIsValied:enterEmailIsValied, enterNameInputHandler: enterEmailInputHandler, enterNameBlurHandlr: enterEmailBlurHandlr, formIsValide:formIsEmailValide, reset: resetEmailValue } = useInput(value => value.trim() === '' || !value.includes('@'));\n\n  \n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    \n    if (enteredName === '') {\n      console.log('if')\n\n      setIsTuch(true)\n      return; \n    }\n    if (enteredEmail === '' || !enteredEmail.includes('@')) {\n      console.log('if enteredEmail')\n      setIsEmailTuch(true)\n      return;\n    }\n    resetValue();\n    resetEmailValue();\n    // setEnteredNameIsTuch(false)\n    // setEnteredName('');\n  \n  }\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='form-control'>\n        <label htmlFor='name'\n          style={ \n            {\n              color: !enterNameIsValied ? 'green' : 'red'\n          }\n        }\n        >Your Name</label>\n        <input type='text' id='name' value={enteredName}\n          onBlur={enterNameBlurHandlr}\n          onInput={enterNameInputHandler} style={\n          {\n            border: !enterNameIsValied ? '1px solid green' : '1px solid red'\n          }\n        } />\n        {enterNameIsValied && <p style={{color: 'red'}} >Name field cannot be empty</p> }\n      </div>\n\n      <div className='form-control'>\n        <label htmlFor='email'\n          style={ \n            {\n              color: !enterEmailIsValied ? 'green' : 'red'\n          }\n        }\n        >Your Email</label>\n        <input type='email' id='email' value={enteredEmail}\n          onBlur={enterEmailBlurHandlr}\n          onInput={enterEmailInputHandler} style={\n          {\n            border: !enterEmailIsValied ? '1px solid green' : '1px solid red'\n          }\n        } />\n        {enterEmailIsValied && <p style={{color: 'red'}} >Email field validation fail</p> }\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={enterEmailIsValied}\n        className={enterEmailIsValied ? 'disable-btn' : ''}\n        >Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n",["33","34"],"E:\\laragon\\www\\udemy_react_journey\\16_form_input\\src\\hook\\user-input.js",[],"E:\\laragon\\www\\udemy_react_journey\\16_form_input\\src\\components\\BasicForm.js",[],"E:\\laragon\\www\\udemy_react_journey\\16_form_input\\src\\hook\\form-input.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":5,"column":107,"nodeType":"41","messageId":"42","endLine":5,"endColumn":119},{"ruleId":"39","severity":1,"message":"43","line":7,"column":201,"nodeType":"41","messageId":"42","endLine":7,"endColumn":218},{"ruleId":"35","replacedBy":"44"},{"ruleId":"37","replacedBy":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"no-unused-vars","'formIsValide' is assigned a value but never used.","Identifier","unusedVar","'formIsEmailValide' is assigned a value but never used.",["46"],["47"],"no-global-assign","no-unsafe-negation"]