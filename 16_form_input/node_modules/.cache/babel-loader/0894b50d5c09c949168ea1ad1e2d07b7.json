{"ast":null,"code":"var _jsxFileName = \"E:\\\\laragon\\\\www\\\\udemy_react_journey\\\\16_form_input\\\\src\\\\components\\\\SimpleInput.js\";\nimport React, { useState, useEffect } from 'react';\nimport useInput from '../hook/user-input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimpleInput = props => {\n  // const [enteredName, setEnteredName] = useState('');\n  // const [enteredNameIsTuch, setEnteredNameIsTuch] = useState(false);\n  // const [formIsValide, setFormIsValide] = useState(true);\n\n  // const enterNameIsValied = enteredName === '' && enteredNameIsTuch;\n\n  // useEffect(() => {\n  //   if (enteredName === '') {\n  //     setFormIsValide(false)\n  //   } else {\n  //     setFormIsValide(true)\n  //   }\n  // }, [enteredName])\n\n  // const enterNameInputHandler = (event) => {\n  //   setEnteredNameIsTuch(true)\n  //   if(event.target.value.trim() === '') {\n  //     setEnteredName('');\n  //     return;\n  //   }\n  //   setEnteredName(event.target.value);\n\n  // }\n  // const enterNameBlurHandlr = (event) => {\n  //   setEnteredNameIsTuch(true);\n  // }\n\n  const submitHandler = event => {\n    event.preventDefault();\n\n    // if (enteredName === '') {\n    //   console.log('if')\n\n    //   setEnteredNameIsTuch(true)\n    //   return; \n    // }\n    // setEnteredNameIsTuch(false)\n    // setEnteredName('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        style: {\n          color: !enterNameIsValied ? 'green' : 'red'\n        },\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: enteredName,\n        onBlur: enterNameBlurHandlr,\n        onInput: enterNameInputHandler,\n        style: {\n          border: !enterNameIsValied ? '1px solid green' : '1px solid red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), enterNameIsValied && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: \"Name field cannot be empty\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 31\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValide,\n        className: !formIsValide ? 'disable-btn' : '',\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c = SimpleInput;\nexport default SimpleInput;\nvar _c;\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["React","useState","useEffect","useInput","jsxDEV","_jsxDEV","SimpleInput","props","submitHandler","event","preventDefault","onSubmit","children","className","htmlFor","style","color","enterNameIsValied","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","enteredName","onBlur","enterNameBlurHandlr","onInput","enterNameInputHandler","border","disabled","formIsValide","_c","$RefreshReg$"],"sources":["E:/laragon/www/udemy_react_journey/16_form_input/src/components/SimpleInput.js"],"sourcesContent":["import React, {useState, useEffect} from 'react'\nimport useInput from   '../hook/user-input';\nconst SimpleInput = (props) => {\n  // const [enteredName, setEnteredName] = useState('');\n  // const [enteredNameIsTuch, setEnteredNameIsTuch] = useState(false);\n  // const [formIsValide, setFormIsValide] = useState(true);\n\n  // const enterNameIsValied = enteredName === '' && enteredNameIsTuch;\n\n  // useEffect(() => {\n  //   if (enteredName === '') {\n  //     setFormIsValide(false)\n  //   } else {\n  //     setFormIsValide(true)\n  //   }\n  // }, [enteredName])\n\n  // const enterNameInputHandler = (event) => {\n  //   setEnteredNameIsTuch(true)\n  //   if(event.target.value.trim() === '') {\n  //     setEnteredName('');\n  //     return;\n  //   }\n  //   setEnteredName(event.target.value);\n  \n    \n  // }\n  // const enterNameBlurHandlr = (event) => {\n  //   setEnteredNameIsTuch(true);\n  // }\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    \n    // if (enteredName === '') {\n    //   console.log('if')\n\n    //   setEnteredNameIsTuch(true)\n    //   return; \n    // }\n    // setEnteredNameIsTuch(false)\n    // setEnteredName('');\n  \n  }\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='form-control'>\n        <label htmlFor='name'\n          style={ \n            {\n              color: !enterNameIsValied ? 'green' : 'red'\n          }\n        }\n        >Your Name</label>\n        <input type='text' id='name' value={enteredName}\n          onBlur={enterNameBlurHandlr}\n          onInput={enterNameInputHandler} style={\n          {\n            border: !enterNameIsValied ? '1px solid green' : '1px solid red'\n          }\n        } />\n        {enterNameIsValied && <p style={{color: 'red'}} >Name field cannot be empty</p> }\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!formIsValide}\n        className={!formIsValide ? 'disable-btn' : ''}\n        >Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AAChD,OAAOC,QAAQ,MAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAC5C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7B;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;;EAEA,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,CAAC,CAAC;;IAEtB;IACA;;IAEA;IACA;IACA;IACA;IACA;EAEF,CAAC;EACD,oBACEL,OAAA;IAAMM,QAAQ,EAAEH,aAAc;IAAAI,QAAA,gBAC5BP,OAAA;MAAKQ,SAAS,EAAC,cAAc;MAAAD,QAAA,gBAC3BP,OAAA;QAAOS,OAAO,EAAC,MAAM;QACnBC,KAAK,EACH;UACEC,KAAK,EAAE,CAACC,iBAAiB,GAAG,OAAO,GAAG;QAC1C,CACD;QAAAL,QAAA,EACA;MAAS;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClBhB,OAAA;QAAOiB,IAAI,EAAC,MAAM;QAACC,EAAE,EAAC,MAAM;QAACC,KAAK,EAAEC,WAAY;QAC9CC,MAAM,EAAEC,mBAAoB;QAC5BC,OAAO,EAAEC,qBAAsB;QAACd,KAAK,EACrC;UACEe,MAAM,EAAE,CAACb,iBAAiB,GAAG,iBAAiB,GAAG;QACnD;MACD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACHJ,iBAAiB,iBAAIZ,OAAA;QAAGU,KAAK,EAAE;UAACC,KAAK,EAAE;QAAK,CAAE;QAAAJ,QAAA,EAAE;MAA0B;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5E,CAAC,eACNhB,OAAA;MAAKQ,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BP,OAAA;QAAQ0B,QAAQ,EAAE,CAACC,YAAa;QAChCnB,SAAS,EAAE,CAACmB,YAAY,GAAG,aAAa,GAAG,EAAG;QAAApB,QAAA,EAC7C;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACb,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEX,CAAC;AAACY,EAAA,GApEI3B,WAAW;AAsEjB,eAAeA,WAAW;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module"}